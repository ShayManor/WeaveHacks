name: CI â€“ Build & Deploy

on:
  push:
    branches:
      - main
      - 'releases/*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # 1. Check out code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Cache pip dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 3. Set up Python (with pip caching as safety)
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      # 4. Set up Docker Buildx (enables BuildKit)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 5. Log in to Google Artifact Registry
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/${{ env.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.WORKLOAD_ID_POOL }}/providers/${{ env.WORKLOAD_ID_PROVIDER }}
          service_account: ${{ env.GCP_SA_EMAIL }}

      - name: Configure Docker for Artifact Registry
        run: | 
          gcloud --quiet auth configure-docker ${REGION}-docker.pkg.dev

      # 6. Build and push with BuildKit caching
      - name: Build & push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${REGION}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.SERVICE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 7. Deploy to Cloud Run
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          image: ${REGION}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPO }}/${{ env.SERVICE }}:${{ github.sha }}
          region: ${REGION}
          platform: managed
